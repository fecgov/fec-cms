{% import 'macros/filters/dropdown-json.jinja' as dropdown %}
<div class="js-keyword-modal modal" id="keyword-modal" aria-hidden="true">
  <div tabindex="-1" class="modal__overlay" data-a11y-dialog-hide></div>
  <div role="dialog" class="modal__content" aria-labelledby="spending-modal-title">
    <div role="document" class="keyword-modal">
      <h2 id="spending-modal-title" class="heading--section">Find documents with...</h2>
      <div class="modal__form  search-controls__either" style="width:44% !important">
        <button type="button" class="modal__close button--close--primary" data-a11y-dialog-hide
          title="Close this dialog window"></button>
        <form action="">
        <h3 class="u-margin--bottom--small">Boolean filters</h3>
          <p>Use these search boxes to refine your search. Only words with letters, numbers, spaces, and hyphens (such
            as in-kind) are accepted:
          </p>
          <div class="filter">
            <label class="label" for="keywords-any">Any of these words</label>
            <input type="text" id="keywords-any" data-operator="or">
            <span class="t-note t-sans">Entering <span class="t-underline">text message</span> will search <span
              class="t-underline">text</span> or <span class="t-underline">message</span></span>
          </div>
          <div class="filter">
            <label class="label" for="keywords-all">All of these words</label>
            <input type="text" id="keywords-all" data-operator="and">
            <span class="t-note t-sans">Entering <span class="t-underline">text message</span> will search <span
              class="t-underline">text</span> and <span class="t-underline">message</span></span>
          </div>
          <div class="filter">
            <label class="label" for="keywords-exact">This exact phrase</label>
            <input type="text" id="keywords-exact" data-operator="exact">
            <span class="t-note t-sans">Entering <span class="t-underline">text message</span> will search <span
              class="t-underline">"text message"</span></span>
          </div>
          <div class="filter">
            <label class="label" for="keywords-none">None of these words</label>
            <input type="text" id="keywords-none" data-operator="exclude">
            <span class="t-note t-sans">Entering <span class="t-underline">text message</span> will exclude <span
              class="t-underline">text</span> and <span class="t-underline">message</span></span>
          <div>
        </div>
        </div>
      </div>
      <div class="search-controls__or search-controls__or--vertical">or</div>
      <div id="proximity_form" class="modal__form  search-controls__either" style="width:44% !important">
        <h3 class="u-margin--bottom--small">Proximity filter</h3>
        <p>Search the maximum proximity between primary keywords or phrases in one or more fields. Proximity terms will not be highlighted in search results. Order is ignored for primary keywords or phrases. Can be combined with boolean filters.</p>
        <div class="filter">
          <div class="q-proximity-fields u-padding--bottom--med">
          <label class="label" for="q_proximity">Primary keyword or phrase</label>
          <input type="text" id="q_proximity-0" name="q_proximity" required value="{{ q_proximitys[0] | default('')}}">
          <input type="text" id="q_proximity-1" name="q_proximity" required value="{{ q_proximitys[1] | default('') }}">
          {% if q_proximitys | length > 2 %}
           {% for q_proximity in q_proximitys[2:] %}
           <div class="input--removable">
           <input type="text" id="q_proximity-{{ loop.index + 1}}" name="q_proximity" required value="{{ q_proximity }}"><button id="js-rm-input" class="u-margin--top button button--close--base modal__remove-field" type="button"></button>
           </div>
           {% endfor %}

          {% endif %}
          </div>
          <button id="js-add-input" class="u-margin--top button button--add" type="button">&nbsp;&nbsp;Add another</button>
        </div>
        <div class="filter">
          <label class="label" for="max_gaps">Maximum proximity between all keywords or phrases</label>
          <div class="increment-decrement__container">
          
            <button id="decrement_max_gaps" class="button--decrement js-step-button" type="button" {% if (max_gaps) == '0'%}disabled{% endif %}></button> 
            <input id="max_gaps" name="max_gaps" class="step_input"  min="0" required value="{{ max_gaps | default('0') }}">
            <button id="increment_max_gaps" class="button--increment js-step-button" type="button"></button>
          </div>
          <span class="t-note t-sans">Example: 0, 3, 50, 400</span>
        </div>
        <div class="fiter u-margin--top">
              <div class="filter range__input range__input--min js-filter" data-filter="range" style="width: 63%; vertical-align: baseline;">
                  <label class="label" for="proximity_filter_term">Secondary keyword or phrase (optional)</label>
                  <input id="proximity_filter_term" type="text" name="proximity_filter_term" value="{{ proximity_filter_term | default('') }}">
              </div>
              
              <div class="filter range__input range__input--max js-filter" data-filter="range" style=" width: 35%; vertical-align: baseline;">
                <label class="label" for="proximity_filter">Appears</label>
                <select id="proximity_filter" name="proximity_filter" data-filter-change="true" data-removeable-filter="true" class="dropdown" value="{{ proximity_filter | default('after') }}">
                {# {% set proximity_filter = (proximity_filter) %} #}
                <option value="after" {{ "selected='selected'" if proximity_filter == 'after' else "" }}>After all primary terms</option>
                <option value="before" {{ "selected='selected'" if proximity_filter == 'before' else "" }}>Before all primary terms</option>
    
                </select>
                {# {{ dropdown.select_single_flat_list( 'proximity_filter', '', label_help='false', options={'after':'After all primary terms','before':'Before all primary terms'}) }} #}
              </div>
         </div>
      


      </div>
      <button class="u-margin--top button button--cta button--search--text" type="submit">Search</button>
      </form>
    </div>
  </div>
</div>