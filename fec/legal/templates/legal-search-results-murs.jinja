{% extends "layouts/legal-doc-search-results.jinja" %}
{% import 'macros/legal.jinja' as legal %}
{% import 'macros/filters/checkbox.jinja' as checkbox %}
{% import 'macros/filters/dropdown-json.jinja' as dropdown %}
{% import 'macros/filters/typeahead-filter.jinja' as typeahead %}
{% set document_type_display_name = 'Closed Matters Under Review' %}

{% block header %}
<header class="page-header slab slab--primary">
  {{ breadcrumb.breadcrumbs('Search results', [('/legal-resources', 'Legal resources'), ('/legal-resources/enforcement', 'Enforcement')]) }}
</header>
{% endblock %}

{% block filters %}
  <input id="sort" type="hidden" name="sort" value="{{ sort }}">
  <input id="doc_type" type="hidden" name="doc_type" value="murs">
  <div class="filters__inner">
    
    <div class="filter">
      <label class="label" for="case_no">MUR number</label>
      <input id="case_no" name="case_no" type="text" value="{{ case_no }}">
    </div>
    <div class="filter">
      <label class="label" for="case_respondents">MUR respondents</label>
      <input id="case_respondents" name="case_respondents" type="text" value="{{ case_respondents }}">
    </div>
  </div>

  <div class="js-accordion accordion--neutral" data-content-prefix="filter" data-open-first="true">

    <button type="button" class="js-accordion-trigger accordion__button">Documents</button>
    <div class="accordion__content">
      {{ legal.keyword_search(result_type, query) }}

      <div class="filter">
      <legend class="label">Document Type</legend>
      {% for category_id, category_label in mur_document_categories.items() %}
        <div>
          <input type="checkbox" id="case_doc_category_id_{{ category_id }}" name="case_doc_category_id" value="{{ category_id }}" {% if category_id in selected_doc_category_ids %}checked{% endif %}>
          <label for="case_doc_category_id_{{ category_id }}">{{ category_label }}</label>
        </div>
      {% endfor %}
      </div>
      <div class="filter">
        <label class="label t-inline-block">Document date range</label>
        <div class="tooltip__container" tabindex="0">
          <button class="tooltip__trigger"><span class="u-visually-hidden">Learn more</span></button>
          <div class="tooltip tooltip--left tooltip--above">
            <p class="tooltip__content tooltip__content">Document date range does not search archived cases</p>
          </div>
        </div>
        <div class="range range--date js-date-range">
          <div class="range__input range__input--min" data-filter="range">
            <label for="case_min_document_date">Beginning</label>
            <input id="case_min_document_date" name="case_min_document_date" placeholder="mm/dd/yyyy" value="{{ case_min_document_date }}">
          </div>
          <div class="range__hyphen">-</div>
          <div class="range__input range__input--max" data-filter="range">
            <label for="case_max_document_date">Ending</label>
            <input id="case_max_document_date" name="case_max_document_date" placeholder="mm/dd/yyyy" value="{{ case_max_document_date }}">
          </div>
        </div>
      </div>
    </div>
  {# </div> #}
  {# <div class="js-accordion accordion--neutral" data-content-prefix="filter" data-open-first="false"> #}

    <button type="button" class="js-accordion-trigger accordion__button">Case details</button>
    <div class="accordion__content">

      {{ checkbox.checkbox_dropdown_multiple(
        'mur_disposition_category_id',
        'Final disposition',
        selected=suggested_mur_disposition_category_ids,
        options=mur_disposition_category_ids_display,
        legend=True,
        prefix='mur_disposition_category_id',
        show_tooltip_text='Final disposition does not search archived cases'
        ) }}
      {{ dropdown.select_json(
        'primary_subject_id',
        'Case subject',
        options=constants.primary_subject_ids,
        default="",
        show_tooltip_text='Case subject does not search archived cases'
        ) }}
      {{ dropdown.select_json_indentation(
        'secondary_subject_id',
        'Secondary case subject',
        options=constants.secondary_subject_placeholder,
        default=""
        ) }}

      <div class="filter">
        <legend class="label">Penalty amount by respondent</legend>
        <div class="range range--currency">
          <div class="range__input range__input--min js-filter" data-filter="range">
            <label for="case_min_penalty_amount">From</label>
            <input id="case_min_penalty_amount" type="text" name="case_min_penalty_amount" data-range="min" data-prefix="$" data-suffix="or more" value="{{ case_min_penalty_amount }}">
          </div>
          <div class="range__hyphen">-</div>
          <div class="range__input range__input--max js-filter" data-filter="range">
            <label for="case_max_penalty_amount">To</label>
            <input id="case_max_penalty_amount" type="text" name="case_max_penalty_amount" data-range="max" data-prefix="$" data-suffix="or less" value="{{ case_max_penalty_amount }}">
          </div>
        </div>
      </div>

      <div class="filter">
        <legend class="label">Case open date range</legend>
        <div class="range range--date js-date-range">
          <div class="range__input range__input--min" data-filter="range">
            <label for="case_min_open_date">Beginning</label>
            <input id="case_min_open_date" name="case_min_open_date" placeholder="mm/dd/yyyy" value="{{ case_min_open_date }}">
          </div>
          <div class="range__hyphen">-</div>
          <div class="range__input range__input--max" data-filter="range">
            <label for="case_max_open_date">Ending</label>
            <input id="case_max_open_date" name="case_max_open_date" placeholder="mm/dd/yyyy" value="{{ case_max_open_date }}">
          </div>
        </div>
      </div>

      <div class="filter">
        <legend class="label">Case close date range</legend>
        <div class="range range--date js-date-range">
          <div class="range__input range__input--min" data-filter="range">
            <label for="case_min_close_date">Beginning</label>
            <input id="case_min_close_date" name="case_min_close_date" placeholder="mm/dd/yyyy" value="{{ case_min_close_date }}">
          </div>
          <div class="range__hyphen">-</div>
          <div class="range__input range__input--max" data-filter="range">
            <label for="case_max_close_date">Ending</label>
            <input id="case_max_close_date" name="case_max_close_date" placeholder="mm/dd/yyyy" value="{{ case_max_close_date }}">
          </div>
        </div>
      </div>
    </div>

  {# </div> #}
  {# <div class="js-accordion accordion--neutral" data-content-prefix="filter" data-open-first="false"> #}
    <button type="button" class="js-accordion-trigger accordion__button">Citations</button>

    <div class="accordion__content">
      <label>If more than one citation is entered:</label>
      <input type="radio" id="case_citation_require_all_false" name="case_citation_require_all" value="false"{% if case_citation_require_all != 'true' %} checked{% endif %}>
      <label for="case_citation_require_all_false">Show cases citing any of them</label>
      <input type="radio" id="case_citation_require_all_true" name="case_citation_require_all" value="true"{% if case_citation_require_all == 'true' %} checked{% endif %}>
      <label for="case_citation_require_all_true">Show cases citing all of them</label>
      {{ typeahead.field('case_regulatory_citation', 'Regulatory citation', False, dataset='caseRegulatoryCitations', allow_text=False) }}
      {{ typeahead.field('case_statutory_citation', 'Statutory citation', False, dataset='caseStatutoryCitations', allow_text=False) }}
      
    </div>
  </div>
  <div class="filters__inner">
    <button type="submit" class="button button--cta u-margin--top">Apply filters</button>
  </div>
{% endblock %}

{% block message %}
<div class="data-container__tags u-no-padding-left">
  <div class="row">
    <h3 class="tags__title">Viewing <span class="tags__count">{{ results.total_murs }}</span> filtered results for:</h3>
  </div>
  <div class="js-filter-tags data-container__tags u-no-padding-left">
    <ul class="tags">
      {% if query %}
        <li data-tag-category="query" class="tag__category">
          <div data-removable="true" class="tag__item">{{ query }}<button class="button js-close tag__remove" data-tag="query"><span class="u-visually-hidden">Remove</span></button></div>
        </li>
      {% endif %}
      {% if case_no %}
        <li data-tag-category="case_no" class="tag__category">
          <div data-removable="true" class="tag__item">{{ case_no }}<button class="button js-close tag__remove" data-tag="case_no"><span class="u-visually-hidden">Remove</span></button></div>
        </li>
      {% endif %}
      {% if case_respondents %}
        <li data-tag-category="case_respondents" class="tag__category">
          <div data-removable="true" class="tag__item">{{ case_respondents }}<button class="button js-close tag__remove" data-tag="case_respondents"><span class="u-visually-hidden">Remove</span></button></div>
        </li>
      {% endif %}
      {% if case_min_document_date or case_max_document_date %}
        <li data-tag-category="open_date" class="tag__category tag__category__range--date">
          <span class="tag__label">Document date</span>
          {% if case_min_document_date %}
          <div data-removable="true" data-id="min_doc_open_date" class="tag__item">{% if not case_max_document_date %}Beginning {% endif %}{{ case_min_document_date }}<button class="button js-close tag__remove" data-tag="case_min_document_date"><span class="u-visually-hidden">Remove</span></button></div>
          {% endif %}
          {% if case_max_document_date %}
          <div data-removable="true" data-id="max_doc_open_date" class="tag__item">{% if not case_min_document_date %}Ending {% endif %}{{ case_max_document_date }}<button class="button js-close tag__remove" data-tag="case_max_document_date"><span class="u-visually-hidden">Remove</span></button></div>
          {% endif %}
        </li>
      {% endif %}
      {% if case_min_open_date or case_max_open_date %}
        <li data-tag-category="open_date" class="tag__category tag__category__range--date">
          <span class="tag__label">Open date</span>
          {% if case_min_open_date %}
          <div data-removable="true" data-id="min_open_date" class="tag__item">{% if not case_max_open_date %}Beginning {% endif %}{{ case_min_open_date }}<button class="button js-close tag__remove" data-tag="case_min_open_date"><span class="u-visually-hidden">Remove</span></button></div>
          {% endif %}
          {% if case_max_open_date %}
          <div data-removable="true" data-id="max_open_date" class="tag__item">{% if not case_min_open_date %}Ending {% endif %}{{ case_max_open_date }}<button class="button js-close tag__remove" data-tag="case_max_open_date"><span class="u-visually-hidden">Remove</span></button></div>
          {% endif %}
        </li>
      {% endif %}
      {% if case_min_close_date or case_max_close_date %}
        <li data-tag-category="close_date" class="tag__category tag__category__range--date">
          <span class="tag__label">Close date</span>
          {% if case_min_close_date %}
          <div data-removable="true" data-id="min_close_date" class="tag__item">{% if not case_max_close_date %}Beginning {% endif %}{{ case_min_close_date }}<button class="button js-close tag__remove" data-tag="case_min_close_date"><span class="u-visually-hidden">Remove</span></button></div>
          {% endif %}
          {% if case_max_close_date %}
          <div data-removable="true" data-id="max_close_date" class="tag__item">{% if not case_min_close_date %}Ending {% endif %}{{ case_max_close_date }}<button class="button js-close tag__remove" data-tag="case_max_close_date"><span class="u-visually-hidden">Remove</span></button></div>
          {% endif %}
        </li>
      {% endif %}
      {% if case_min_penalty_amount or case_max_penalty_amount %}
        <li data-tag-category="close_date" class="tag__category tag__category__range--date">
          {% if case_min_penalty_amount %}
          <div data-removable="true" data-id="min_penalty_amount" class="tag__item">{{ case_min_penalty_amount }}<button class="button js-close tag__remove" data-tag="case_min_penalty_amount"><span class="u-visually-hidden">Remove</span></button></div>
          {% endif %}
          {% if case_max_penalty_amount %}
          <div data-removable="true" data-id="max_penalty_amount" class="tag__item">{{ case_max_penalty_amount }}<button class="button js-close tag__remove" data-tag="case_max_penalty_amount"><span class="u-visually-hidden">Remove</span></button></div>
          {% endif %}
        </li>
      {% endif %}
      {% if selected_doc_category_names and selected_doc_category_names | reject('equalto', none) | list %}
        <li data-tag-category="doc_category" class="tag__category">
          {% for selected_doc_category_name in selected_doc_category_names %}
            <div data-removable="true" class="tag__item">{{ selected_doc_category_name }}<button class="button js-close tag__remove" data-tag="doc_category_{{ loop.index0 }}"><span class="u-visually-hidden">Remove</span></button></div>
          {% endfor %}
        </li>
      {% endif %}
      {% if selected_mur_disposition_names and selected_mur_disposition_names | reject('equalto', none) | list %}
        <li data-tag-category="disposition_category" class="tag__category">
          {% for selected_mur_disposition_name in selected_mur_disposition_names %}
            <div data-removable="true" class="tag__item">{{ selected_mur_disposition_name }}<button class="button js-close tag__remove" data-tag="disposition_category_{{ loop.index0 }}"><span class="u-visually-hidden">Remove</span></button></div>
          {% endfor %}
        </li>
      {% endif %}
      {% if primary_subject_id or secondary_subject_id_name  %}
        <li data-tag-category="primary_subject_id" class="tag__category tag__category__range--date">
        {% if primary_subject_id_name and primary_subject_id %}
          <div data-removable="true" class="tag__item">{{ primary_subject_id_name }}<button class="button js-close tag__remove" data-tag="primary_subject_id"><span class="u-visually-hidden">Remove</span></button></div>
        {% endif %}
        {% if secondary_subject_id_name %}
          <div data-removable="true" class="tag__item">{{ secondary_subject_id_name }}<button class="button js-close tag__remove" data-tag="secondary_subject_id"><span class="u-visually-hidden">Remove</span></button></div>
        {% endif %}
        </li>
      {% endif %}
      {% if case_regulatory_citation or case_statutory_citation %}
        <li data-tag-category="case_regulatory_citation" class="tag__category">
          {% if case_citation_require_all =='true' %}
          <div data-removable="false" class="tag__item">Cases with all citations</div>
          {% else %}
          <div data-removable="false" class="tag__item">Cases with any citations</div>
          {% endif %}
        </li>
      {% endif %}
      {% if case_regulatory_citation %}
        <li data-tag-category="case_regulatory_citation" class="tag__category">
        {% for case_reg_citation in case_regulatory_citation %}
          <div data-removable="true" class="tag__item">{{ case_reg_citation }}<button class="button js-close tag__remove" data-tag="case_regulatory_citation_{{ loop.index0 }}"><span class="u-visually-hidden">Remove</span></button></div>
        {% endfor %}
        </li>
      {% endif %}
      {% if case_statutory_citation %}
        <li data-tag-category="case_statutory_citation" class="tag__category">
        {% for case_stat_citation in case_statutory_citation %}
          <div data-removable="true" class="tag__item">{{ case_stat_citation }}<button class="button js-close tag__remove" data-tag="case_statutory_citation_{{ loop.index0 }}"><span class="u-visually-hidden">Remove</span></button></div>
        {% endfor %}
        </li>
      {% endif %}
      
      {% if q_proximitys and q_proximitys | reject('equalto', none) | list %}
        <li data-tag-category="q_proximity" class="tag__category tag__category--and">
        Proximity keyword or phrase: 
        {% for q_proximity in q_proximitys %}
          <div data-removable="true" class="tag__item">{{ q_proximity }}<button class="button js-close tag__remove" data-tag="q_proximity-{{ loop.index0 }}"><span class="u-visually-hidden">Remove</span></button></div>
        {% endfor %}
        </li>
      {% endif %}

      {% if max_gaps and q_proximitys %}
        <li data-tag-category="max_gaps" class="tag__category">
        Maximum proximity: 
          <div data-removable="true" class="tag__item">{{ max_gaps }}</div>
        </li>
      {% endif %}

      {% if proximity_filter_term and proximity_filter %}
        <li data-tag-category="proximity_filter_term" class="tag__category tag__category__range--date">
        Secondary proximity keyword or phrase: 
          <div data-removable="true" class="tag__item">{{ proximity_filter_term }}<button class="button js-close tag__remove" data-tag="proximity_filter_term"><span class="u-visually-hidden">Remove</span></button></div>
        Appears 
          <div data-removable="true" class="tag__item">{{ proximity_filter }}
        all primary terms
        </li>
      {% endif %}
    </ul>
  </div>
</div>
{% endblock %}

{% block results %}
  {% with results=results %}
    {% include 'partials/legal-pagination.jinja' %}
  {% endwith %}
  {% with murs = results.murs %}
    {% include 'partials/legal-search-results-mur.jinja' %}
  {% endwith %}
  {% with results=results %}
    {% include 'partials/legal-pagination.jinja' %}
  {% endwith %}
{% endblock %}

{% block scripts %}
  <script>
   window.context = {{ context_vars|to_json|safe }};
  </script>
  {# super loads scripts from parent #}
  {{ super() }}
  <script>
  let sort_val = "{{ sort | safe }}"
  // The case_no column, header-cell
  let sort_btn = document.getElementById('js-sort-mur')


  const toggle_sort = function() {
      let new_val;
      //On first, there is no querystring yet, so this handles possible null value for 'sort_val' 
      if (sort_val == '-case_no' || sort_val == null || sort_val == '') {
          new_val = 'case_no'
      } else {
          new_val = '-case_no'
      }
      //populate hidden field with current sort value
      document.getElementById('sort').value = new_val

      //submit the filters form
      document.forms["category-filters"].submit()
  }

  //If there are no results to the query, the table is not rendered so there is no sort_btn and thus an error on trying to add an event listener to it, so:
  if (sort_btn) {
      sort_btn.addEventListener("click", toggle_sort);
  }

  // Keep scroll-position with each reload
  //https://stackoverflow.com/questions/17642872/refresh-page-and-keep-scroll-position 
  document.addEventListener("DOMContentLoaded", function(event) {
      var scrollpos = localStorage.getItem('scrollpos');
      if (scrollpos) window.scrollTo(0, scrollpos);
  });

  window.onbeforeunload = function(e) {
      localStorage.setItem('scrollpos', window.scrollY);
      location.reload();
  };

  // JS for final disposition filter
  // Allow the selected-item button to uncheck box in list above
  $(document).on('click','.dropdown__item',  function(e){
      const btn = $(this).find('.dropdown__item--selected');
      if (btn) {
        $('#' + btn.data('label')).trigger('click');
      }
    });
/* 
 Checks the checkboxes for the chosen items because the existing JS does not do it as expected.
 This is specific to this particular filter, but could be extended to handle all checkbox-dropdown 
 filters on a page as we do in tables.js with the checkFromQuery() function.
*/
  // Get the context vars from the view to use in JS
  window.context = {{ context_vars|to_json|safe }};
  setTimeout(function() {
  (function() {
  //Create an object of the mur_disposition_category_id parameter value(s) from the request
  const queryFields = {'mur_disposition_category_id': window.context.mur_disposition_category_id}
  // Create an array to hold checkbox html elements
  const queryBoxes = [];
  // Iterate the key/vals of queryFields
  $.each(queryFields, function(key, val){
    // Create a variable for matching checkbox
    let queryBox;
    // Handle val as array
    if (Array.isArray(val)) {
        // iterate the val array
        val.forEach(i => {
          // Find matching checkboxes
          queryBox = $(`input:checkbox[name="${key}"][value="${i}"]`);
          // Push matching checkboxes to the  array
          queryBoxes.push(queryBox);
        });
      }
      // Handle singular val
      else {
        // find matching checkbox
        queryBox = $(`input:checkbox[name="${key}"][value="${val}"]`);
        // Push matching checkbox to the array
        queryBoxes.push(queryBox);
        }
    });
    // Iterate the array of matching checkboxes(queryBoxes), check by triggering click
    // ...if they are not already checked
    for (let box of queryBoxes) {
      if (!($(box).is(':checked'))) {
            $(box).trigger('click');   
      }
    }
   })();
  }, 500)
</script>
{% endblock %}
