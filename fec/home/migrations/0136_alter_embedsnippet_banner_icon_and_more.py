# Generated by Django 4.2.10 on 2024-08-08 01:27

from django.db import migrations, models
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0135_alter_resourcepage_sections'),
    ]

    operations = [
        migrations.AlterField(
            model_name='embedsnippet',
            name='banner_icon',
            field=models.TextField(blank=True, default='info', help_text="This field applies to informational-message snippets only.             Input 'info' or 'alert'. Default is 'info'"),
        ),
        migrations.AlterField(
            model_name='officepage',
            name='offices',
            field=wagtail.fields.StreamField([('office', wagtail.blocks.StructBlock([('office_title', wagtail.blocks.CharBlock(blank=True, help_text='Required', null=True, required=True)), ('hide_title', wagtail.blocks.BooleanBlock(help_text='Should the office title be displayed?', required=False)), ('office_description', wagtail.blocks.RichTextBlock(blank=True)), ('more_info', wagtail.blocks.StreamBlock([('html', wagtail.blocks.RawHTMLBlock(blank=True)), ('internal_button', wagtail.blocks.StructBlock([('internal_page', wagtail.blocks.PageChooserBlock()), ('text', wagtail.blocks.CharBlock())], blank=True)), ('external_button', wagtail.blocks.StructBlock([('url', wagtail.blocks.URLBlock()), ('text', wagtail.blocks.CharBlock())], blank=True)), ('document', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('external_document', wagtail.blocks.URLBlock(help_text='Full url to the document', required=False))], blank=True, template='blocks/simple-document.html'))], blank=True, help_text='Use for internal/external btns or document-links', required=False)), ('employee', wagtail.blocks.StructBlock([('employee_name', wagtail.blocks.CharBlock(blank=True, required=False)), ('employee_title', wagtail.blocks.StructBlock([('title', wagtail.blocks.StreamBlock([('html_title', wagtail.blocks.RawHTMLBlock(blank=True, help_text='For footnote on title, use html block with &lt;sup&gt;1&lt;/sup&gt;', required=False)), ('text_title', wagtail.blocks.CharBlock(blank=True, required=False))], blank=True, required=False))], blank=True, help_text='<b style="color:green">For footnote on title,                         use html block with &lt;sup&gt;1&lt;/sup&gt;</b>', required=False)), ('employee_image', wagtail.images.blocks.ImageChooserBlock(blank=True, required=False)), ('employee_bio', wagtail.blocks.RichTextBlock(blank=True, required=False))], blank=True, default=[], null=True, required=False)), ('contact_info', wagtail.blocks.StructBlock([('label', wagtail.blocks.CharBlock(icon='title', required=False)), ('contact_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('item_label', wagtail.blocks.CharBlock(required=False)), ('item_icon', wagtail.blocks.ChoiceBlock(choices=[('email', 'Email'), ('fax', 'Fax'), ('hand', 'Hand delivery'), ('phone', 'Phone'), ('mail', 'Mail'), ('map-pin', 'Map pin'), ('github', 'Github'), ('question-bubble', 'Question')])), ('item_info', wagtail.blocks.RichTextBlock(required=True))])))], blank=True)), ('extra_info', wagtail.blocks.StreamBlock([('html', wagtail.blocks.RawHTMLBlock(blank=True, help_text='<b style="color:green">For footnote, use &lt;sup&gt;1&lt;/sup&gt;</b>', required=False)), ('text', wagtail.blocks.RichTextBlock(blank=True, required=False))], blank=True, help_text='Use for sub-offices, staff-lists, footnotes or                     any extra info appearing at bottom of office section <br>                     <b style="color:green">For footnote, use html block with &lt;sup&gt;1&lt;/sup&gt;</b>', null=True, required=False))], blank=True, null=True))], blank=True, null=True, use_json_field=True),
        ),
    ]
